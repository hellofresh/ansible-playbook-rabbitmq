---

- name: cluster | Check clluster status for all the nodes except the node to join with
  shell: "rabbitmqctl cluster_status | grep {{ rabbitmq_cluster_instance_to_join }}"
  changed_when: False
  ignore_errors: True
  when: "{{ rabbitmq_cluster_instance_to_join !=  ansible_fqdn }}"
  register: cluster_result

- name: cluster | stop rabbitmq app for standalone nodes in order to join
  shell: "rabbitmqctl stop_app"
  when: cluster_result is defined and cluster_result.rc == 1

# for this to work, an entry including the short hostname must exist in /etc/hosts
- name: cluster | add this node to cluster
  shell: "rabbitmqctl join_cluster rabbit@{{ rabbitmq_cluster_instance_to_join }}"
  when: cluster_result is defined and cluster_result.rc == 1

# TODO: consider adding functionality to join multiple nodes if one of the nodes is down

- name: cluster | start rabbitmq app for standalone nodes
  shell: "rabbitmqctl start_app"
  when: cluster_result is defined and cluster_result.rc == 1

- name: cluster | get not running nodes
  uri:
    url="http://localhost:15672/api/nodes"
    user="{{ rabbitmq_cluster_api_user }}"
    password="{{ rabbitmq_cluster_api_password }}"
    method="GET"
    return_content=true
  delegate_to: "{{ groups[rabbitmq_cluster_group][rabbitmq_cluster_instance_to_join_index] }}"
  run_once: true
  register: cluster_nodes

# if node is not in the inventory it needs to be removed from the
# | selectattr('running', 'equalto', False) | list
- name: cluster | set not running cluster nodes to be removed and not in the inventory
  set_fact:
    rabbitmq_cluster_nodes_to_remove="{{ cluster_nodes.content | from_json | map(attribute='name') | list | difference(groups[rabbitmq_cluster_group]) }}"
  delegate_to: "{{ groups[rabbitmq_cluster_group][rabbitmq_cluster_instance_to_join_index] }}"
  run_once: true

- name: cluster | display nodes that will be removed
  debug: var=rabbitmq_cluster_nodes_to_remove
  delegate_to: "{{ groups[rabbitmq_cluster_group][rabbitmq_cluster_instance_to_join_index] }}"
  run_once: true

- name: cluster | forget not running cluster nodes
  shell: "rabbitmqctl forget_cluster_node {{ item }}"
  with_items: "{{ rabbitmq_cluster_nodes_to_remove }}"
  when: rabbitmq_cluster_nodes_to_remove != []
  delegate_to: "{{ groups[rabbitmq_cluster_group][rabbitmq_cluster_instance_to_join_index] }}"
  run_once: true
